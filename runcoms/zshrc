#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

###############
#    ALIAS    #
###############

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
hash -d gdrive=/Volumes/jetdrive/GoogleDrive
hash -d jdrive=/Volumes/jetdrive

alias start_psql="pg_ctl -D /usr/local/var/postgres start"
alias start_memcached="memcached -d"
alias start_mysql="mysql.server start"

alias zp_git="nvim ~/.zprezto/modules/git/alias.zsh"

###############
#   GENERAL   #
###############
# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

export VISUAL=/Users/lazywei/Projects/neovim/build/bin/nvim
export EDITOR="$VISUAL"
export GIT_EDITOR="$VISUAL"

###############
#    PATH     #
###############

if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

export PATH=$HOME/bin:$PATH

# For golang
export GOPATH=$HOME/GoProjects
export PATH=$PATH:$GOPATH/bin

export PYLEARN2_DATA_PATH=~/Research/pl_data

# Android SDK
export PATH=${PATH}:~/Library/Android/sdk/platform-tools:~/Library/Android/sdk/tools

###############
#     FZF     #
###############

export PATH=$HOME/Projects/fzf-fs:$PATH

# Setting ag as the default source for fzf
export FZF_DEFAULT_COMMAND='ag -l -g ""'

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# fh - repeat history
fh() {
  print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed 's/ *[0-9]* *//' )
}

# fco - checkout git commit
fco() {
  local commits commit
  commits=$(git log --pretty=oneline --abbrev-commit --reverse) &&
  commit=$(echo "$commits" | fzf --tac +s +m -e) &&
  git checkout $(echo "$commit" | sed "s/ .*//")
}

# fshow - git commit browser
fshow() {
  local out sha q
  while out=$(
      git log --decorate=short --graph --oneline --color=always |
      fzf --ansi --multi --no-sort --reverse --query="$q" --print-query); do
    q=$(head -1 <<< "$out")
    while read sha; do
      [ -n "$sha" ] && git show --color=always $sha | less -R
    done < <(sed '1d;s/^[^a-z0-9]*//;/^$/d' <<< "$out" | awk '{print $1}')
  done
}

# fts [FUZZY PATTERN] - Select selected tmux session
#   - Bypass fuzzy finder if there's only one match (--select-1)
#   - Exit if there's no match (--exit-0)
fts() {
  local session
  session=$(tmux list-sessions -F "#{session_name}" | \
    fzf --query="$1" --select-1 --exit-0) &&
  tmux switch-client -t "$session"
}

# ftpane - switch tmux pane
ftpane () {
  local panes current_window target target_window target_pane
  panes=$(tmux list-panes -s -F '#I:#P - #{pane_current_path} #{pane_current_command}')
  current_window=$(tmux display-message  -p '#I')

  target=$(echo "$panes" | fzf) || return

  target_window=$(echo $target | awk 'BEGIN{FS=":|-"} {print$1}')
  target_pane=$(echo $target | awk 'BEGIN{FS=":|-"} {print$2}' | cut -c 1)

  if [[ $current_window -eq $target_window ]]; then
    tmux select-pane -t ${target_window}.${target_pane}
  else
    tmux select-pane -t ${target_window}.${target_pane} &&
    tmux select-window -t $target_window
  fi
}

# fasd
z() {
  if [[ -z "$*" ]]; then
    cd "$(fasd -l 2>&1 | fzf +s --tac | sed 's/^[0-9,.]* *//')"
  else
    fasd "$@"
  fi
}

###############
#    LPASS    #
###############

# LastPass Alfred Workflow
# https://github.com/bachya/lp-vault-manager#preventing-future-master-login-requests
export LPASS_AGENT_TIMEOUT=0

###############
#    NVIM     #
###############

export VIMRUNTIME=/Users/lazywei/Projects/neovim/runtime
export PATH=/Users/lazywei/Projects/neovim/build/bin:$PATH

# for quick build
alias qb_nvim="rm -rf build && make clean && make CMAKE_BUILD_TYPE=Release"
alias vim="nvim"

###############
#   DIRENV    #
###############

eval "$(direnv hook zsh)"

###############
#    JAVA     #
###############

export CLASSPATH=/Users/lazywei/Research/mulan/lib/weka-3.7.10.jar:$CLASSPATH

###############

PERL_MB_OPT="--install_base \"/Users/lazywei/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/lazywei/perl5"; export PERL_MM_OPT;
